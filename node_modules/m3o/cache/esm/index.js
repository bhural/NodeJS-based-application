import * as m3o from "@m3o/m3o-node";
export class CacheService {
    constructor(token) {
        this.client = new m3o.Client({ token: token });
    }
    // Decrement a value (if it's a number). If key not found it is equivalent to set.
    decrement(request) {
        return this.client.call("cache", "Decrement", request);
    }
    // Delete a value from the cache. If key not found a success response is returned.
    delete(request) {
        return this.client.call("cache", "Delete", request);
    }
    // Get an item from the cache by key. If key is not found, an empty response is returned.
    get(request) {
        return this.client.call("cache", "Get", request);
    }
    // Increment a value (if it's a number). If key not found it is equivalent to set.
    increment(request) {
        return this.client.call("cache", "Increment", request);
    }
    // List all the available keys
    listKeys(request) {
        return this.client.call("cache", "ListKeys", request);
    }
    // Set an item in the cache. Overwrites any existing value already set.
    set(request) {
        return this.client.call("cache", "Set", request);
    }
}
