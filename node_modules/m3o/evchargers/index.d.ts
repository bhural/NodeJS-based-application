export declare class EvchargersService {
    private client;
    constructor(token: string);
    referenceData(request: ReferenceDataRequest): Promise<ReferenceDataResponse>;
    search(request: SearchRequest): Promise<SearchResponse>;
}
export interface Address {
    access_comments?: string;
    address_line_1?: string;
    address_line_2?: string;
    country?: {
        [key: string]: any;
    };
    country_id?: string;
    lat_lng?: string;
    location?: Coordinates;
    postcode?: string;
    state_or_province?: string;
    title?: string;
    town?: string;
}
export interface BoundingBox {
    bottom_left?: Coordinates;
    top_right?: Coordinates;
}
export interface ChargerType {
    comments?: string;
    id?: string;
    is_fast_charge_capable?: boolean;
    title?: string;
}
export interface CheckinStatusType {
    id?: string;
    is_automated?: boolean;
    is_positive?: boolean;
    title?: string;
}
export interface Connection {
    amps?: number;
    connection_type?: ConnectionType;
    connection_type_id?: string;
    current?: string;
    level?: ChargerType;
    level_id?: string;
    power?: number;
    reference?: string;
    status?: StatusType;
    voltage?: number;
}
export interface ConnectionType {
    formal_name?: string;
    id?: string;
    is_discontinued?: boolean;
    is_obsolete?: boolean;
    title?: string;
}
export interface Coordinates {
    latitude?: number;
    longitude?: number;
}
export interface Country {
    continent_code?: string;
    id?: string;
    iso_code?: string;
    title?: string;
}
export interface CurrentType {
    description?: string;
    id?: string;
    title?: string;
}
export interface DataProvider {
    comments?: string;
    data_provider_status_type?: DataProviderStatusType;
    id?: string;
    license?: string;
    title?: string;
    website?: string;
}
export interface DataProviderStatusType {
    id?: string;
    is_provider_enabled?: boolean;
    title?: string;
}
export interface Operator {
    comments?: string;
    contact_email?: string;
    fault_report_email?: string;
    id?: string;
    is_private_individual?: boolean;
    phone_primary?: string;
    phone_secondary?: string;
    title?: string;
    website?: string;
}
export interface Poi {
    address?: {
        [key: string]: any;
    };
    connections?: Connection[];
    cost?: string;
    data_provider_id?: string;
    id?: string;
    num_points?: number;
    operator?: {
        [key: string]: any;
    };
    operator_id?: string;
    usage_type?: UsageType;
    usage_type_id?: string;
}
export interface ReferenceDataRequest {
}
export interface ReferenceDataResponse {
    charger_types?: ChargerType[];
    checkin_status_types?: CheckinStatusType[];
    connection_types?: ConnectionType[];
    countries?: Country[];
    current_types?: CurrentType[];
    data_providers?: DataProvider[];
    operators?: Operator[];
    status_types?: StatusType[];
    submission_status_types?: SubmissionStatusType[];
    usage_types?: UsageType[];
    user_comment_types?: UserCommentType[];
}
export interface SearchRequest {
    box?: BoundingBox;
    connection_types?: string[];
    country_id?: string;
    distance?: number;
    levels?: string[];
    location?: Coordinates;
    max_results?: number;
    min_power?: number;
    operators?: string[];
    usage_types?: string[];
}
export interface SearchResponse {
    pois?: Poi[];
}
export interface StatusType {
    id?: string;
    is_operational?: boolean;
    title?: string;
}
export interface SubmissionStatusType {
    id?: string;
    is_live?: boolean;
    title?: string;
}
export interface UsageType {
    id?: string;
    is_access_key_required?: boolean;
    is_membership_required?: boolean;
    is_pay_at_location?: boolean;
    title?: string;
}
export interface UserCommentType {
    id?: string;
    title?: string;
}
