import * as m3o from "@m3o/m3o-node";
export declare class ListsService {
    private client;
    constructor(token: string);
    create(request: CreateRequest): Promise<CreateResponse>;
    delete(request: DeleteRequest): Promise<DeleteResponse>;
    events(request: EventsRequest): Promise<m3o.Stream<EventsRequest, EventsResponse>>;
    list(request: ListRequest): Promise<ListResponse>;
    read(request: ReadRequest): Promise<ReadResponse>;
    update(request: UpdateRequest): Promise<UpdateResponse>;
}
export interface CreateRequest {
    items?: string[];
    name?: string;
}
export interface CreateResponse {
    list?: {
        [key: string]: any;
    };
}
export interface DeleteRequest {
    id?: string;
}
export interface DeleteResponse {
    list?: {
        [key: string]: any;
    };
}
export interface EventsRequest {
    id?: string;
}
export interface EventsResponse {
    event?: string;
    list?: {
        [key: string]: any;
    };
}
export interface List {
    created?: string;
    id?: string;
    items?: string[];
    name?: string;
    updated?: string;
}
export interface ListRequest {
}
export interface ListResponse {
    lists?: List[];
}
export interface ReadRequest {
    id?: string;
}
export interface ReadResponse {
    list?: {
        [key: string]: any;
    };
}
export interface UpdateRequest {
    list?: {
        [key: string]: any;
    };
}
export interface UpdateResponse {
    list?: {
        [key: string]: any;
    };
}
