export declare class AppService {
    private client;
    constructor(token: string);
    delete(request: DeleteRequest): Promise<DeleteResponse>;
    list(request: ListRequest): Promise<ListResponse>;
    logs(request: LogsRequest): Promise<LogsResponse>;
    regions(request: RegionsRequest): Promise<RegionsResponse>;
    reserve(request: ReserveRequest): Promise<ReserveResponse>;
    resolve(request: ResolveRequest): Promise<ResolveResponse>;
    run(request: RunRequest): Promise<RunResponse>;
    status(request: StatusRequest): Promise<StatusResponse>;
    update(request: UpdateRequest): Promise<UpdateResponse>;
}
export interface DeleteRequest {
    name?: string;
}
export interface DeleteResponse {
}
export interface ListRequest {
}
export interface ListResponse {
    services?: Service[];
}
export interface LogsRequest {
    logs_type?: string;
    name?: string;
}
export interface LogsResponse {
    logs?: string;
}
export interface RegionsRequest {
}
export interface RegionsResponse {
    regions?: string[];
}
export interface Reservation {
    created?: string;
    expires?: string;
    name?: string;
    owner?: string;
    token?: string;
}
export interface ReserveRequest {
    name?: string;
}
export interface ReserveResponse {
    reservation?: {
        [key: string]: any;
    };
}
export interface ResolveRequest {
    id?: string;
}
export interface ResolveResponse {
    url?: string;
}
export interface RunRequest {
    branch?: string;
    env_vars?: {
        [key: string]: string;
    };
    name?: string;
    port?: number;
    region?: string;
    repo?: string;
}
export interface RunResponse {
    service?: {
        [key: string]: any;
    };
}
export interface Service {
    backend?: string;
    branch?: string;
    created?: string;
    custom_domains?: string[];
    env_vars?: {
        [key: string]: string;
    };
    id?: string;
    name?: string;
    port?: number;
    region?: string;
    repo?: string;
    status?: string;
    updated?: string;
    url?: string;
}
export interface StatusRequest {
    name?: string;
}
export interface StatusResponse {
    service?: {
        [key: string]: any;
    };
}
export interface UpdateRequest {
    env_vars?: {
        [key: string]: string;
    };
    name?: string;
}
export interface UpdateResponse {
}
