import * as m3o from "@m3o/m3o-node";
export class AppService {
    constructor(token) {
        this.client = new m3o.Client({ token: token });
    }
    // Delete an app
    delete(request) {
        return this.client.call("app", "Delete", request);
    }
    // List all the apps
    list(request) {
        return this.client.call("app", "List", request);
    }
    // Get the logs for an app
    logs(request) {
        return this.client.call("app", "Logs", request);
    }
    // Return the support regions
    regions(request) {
        return this.client.call("app", "Regions", request);
    }
    // Reserve app names
    reserve(request) {
        return this.client.call("app", "Reserve", request);
    }
    // Resolve an app by id to its raw backend endpoint
    resolve(request) {
        return this.client.call("app", "Resolve", request);
    }
    // Run an app from source
    run(request) {
        return this.client.call("app", "Run", request);
    }
    // Get the status of an app
    status(request) {
        return this.client.call("app", "Status", request);
    }
    // Update the app. The latest source code will be downloaded, built and deployed.
    update(request) {
        return this.client.call("app", "Update", request);
    }
}
