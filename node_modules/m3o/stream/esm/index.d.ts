export declare class StreamService {
    private client;
    constructor(token: string);
    createChannel(request: CreateChannelRequest): Promise<CreateChannelResponse>;
    listChannels(request: ListChannelsRequest): Promise<ListChannelsResponse>;
    listMessages(request: ListMessagesRequest): Promise<ListMessagesResponse>;
    sendMessage(request: SendMessageRequest): Promise<SendMessageResponse>;
}
export interface Channel {
    description?: string;
    last_active?: string;
    name?: string;
}
export interface CreateChannelRequest {
    description?: string;
    name?: string;
}
export interface CreateChannelResponse {
}
export interface ListChannelsRequest {
}
export interface ListChannelsResponse {
    channels?: Channel[];
}
export interface ListMessagesRequest {
    channel?: string;
    limit?: number;
}
export interface ListMessagesResponse {
    channel?: string;
    messages?: Message[];
}
export interface Message {
    channel?: string;
    id?: string;
    metadata?: {
        [key: string]: string;
    };
    text?: string;
    timestamp?: string;
}
export interface SendMessageRequest {
    channel?: string;
    text?: string;
}
export interface SendMessageResponse {
}
