export declare class NftService {
    private client;
    constructor(token: string);
    asset(request: AssetRequest): Promise<AssetResponse>;
    assets(request: AssetsRequest): Promise<AssetsResponse>;
    collection(request: CollectionRequest): Promise<CollectionResponse>;
    collections(request: CollectionsRequest): Promise<CollectionsResponse>;
    create(request: CreateRequest): Promise<CreateResponse>;
}
export interface Asset {
    collection?: {
        [key: string]: any;
    };
    contract?: {
        [key: string]: any;
    };
    creator?: User;
    description?: string;
    id?: number;
    image_url?: string;
    last_sale?: Sale;
    listing_date?: string;
    name?: string;
    owner?: User;
    permalink?: string;
    presale?: boolean;
    sales?: number;
    token_id?: string;
    traits?: {
        [key: string]: any;
    }[];
}
export interface AssetRequest {
    contract_address?: string;
    token_id?: string;
}
export interface AssetResponse {
    asset?: {
        [key: string]: any;
    };
}
export interface AssetsRequest {
    collection?: string;
    cursor?: string;
    limit?: number;
    offset?: number;
    order?: string;
    order_by?: string;
    owner?: string;
}
export interface AssetsResponse {
    assets?: Asset[];
    next?: string;
    previous?: string;
}
export interface Collection {
    banner_image_url?: string;
    created_at?: string;
    description?: string;
    editors?: string[];
    external_link?: string;
    image_url?: string;
    name?: string;
    payment_tokens?: Token[];
    payout_address?: string;
    primary_asset_contracts?: Contract[];
    safelist_request_status?: string;
    seller_fees?: string;
    slug?: string;
    stats?: {
        [key: string]: any;
    };
    traits?: {
        [key: string]: any;
    };
}
export interface CollectionRequest {
    slug?: string;
}
export interface CollectionResponse {
    collection?: {
        [key: string]: any;
    };
}
export interface CollectionsRequest {
    limit?: number;
    offset?: number;
    owner?: string;
}
export interface CollectionsResponse {
    collections?: Collection[];
}
export interface Contract {
    address?: string;
    created_at?: string;
    description?: string;
    name?: string;
    owner?: number;
    payout_address?: string;
    schema?: string;
    seller_fees?: string;
    symbol?: string;
    type?: string;
}
export interface CreateRequest {
    data?: string;
    description?: string;
    image?: string;
    name?: string;
}
export interface CreateResponse {
    asset?: {
        [key: string]: any;
    };
}
export interface Sale {
    asset_decimals?: number;
    asset_token_id?: string;
    created_at?: string;
    event_timestamp?: string;
    event_type?: string;
    payment_token?: Token;
    quantity?: string;
    total_price?: string;
    transaction?: {
        [key: string]: any;
    };
}
export interface Token {
    address?: string;
    decimals?: number;
    eth_price?: string;
    id?: number;
    image_url?: string;
    name?: string;
    symbol?: string;
    usd_price?: string;
}
export interface Transaction {
    block_hash?: string;
    block_number?: string;
    from_account?: User;
    id?: number;
    timestamp?: string;
    to_account?: User;
    transaction_hash?: string;
    transaction_index?: string;
}
export interface User {
    address?: string;
    profile_url?: string;
    username?: string;
}
