export declare class WeatherService {
    private client;
    constructor(token: string);
    forecast(request: ForecastRequest): Promise<ForecastResponse>;
    now(request: NowRequest): Promise<NowResponse>;
}
export interface Forecast {
    avg_temp_c?: number;
    avg_temp_f?: number;
    chance_of_rain?: number;
    condition?: string;
    date?: string;
    icon_url?: string;
    max_temp_c?: number;
    max_temp_f?: number;
    max_wind_kph?: number;
    max_wind_mph?: number;
    min_temp_c?: number;
    min_temp_f?: number;
    sunrise?: string;
    sunset?: string;
    will_it_rain?: boolean;
}
export interface ForecastRequest {
    days?: number;
    location?: string;
}
export interface ForecastResponse {
    country?: string;
    forecast?: {
        [key: string]: any;
    }[];
    latitude?: number;
    local_time?: string;
    location?: string;
    longitude?: number;
    region?: string;
    timezone?: string;
}
export interface NowRequest {
    location?: string;
}
export interface NowResponse {
    cloud?: number;
    condition?: string;
    country?: string;
    daytime?: boolean;
    feels_like_c?: number;
    feels_like_f?: number;
    humidity?: number;
    icon_url?: string;
    latitude?: number;
    local_time?: string;
    location?: string;
    longitude?: number;
    region?: string;
    temp_c?: number;
    temp_f?: number;
    timezone?: string;
    wind_degree?: number;
    wind_direction?: string;
    wind_kph?: number;
    wind_mph?: number;
}
