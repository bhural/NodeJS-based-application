export declare class EthereumService {
    private client;
    constructor(token: string);
    balance(request: BalanceRequest): Promise<BalanceResponse>;
    broadcast(request: BroadcastRequest): Promise<BroadcastResponse>;
    transaction(request: TransactionRequest): Promise<TransactionResponse>;
}
export interface BalanceRequest {
    address?: string;
}
export interface BalanceResponse {
    balance?: number;
}
export interface BroadcastRequest {
    hex?: string;
}
export interface BroadcastResponse {
    hash?: string;
}
export interface TransactionRequest {
    hash?: string;
}
export interface TransactionResponse {
    block_hash?: string;
    block_number?: string;
    chain_id?: string;
    from_address?: string;
    gas?: string;
    gas_price?: string;
    hash?: string;
    input?: string;
    max_fee_per_gas?: string;
    max_priority_fee_per_gas?: string;
    nonce?: string;
    r?: string;
    s?: string;
    to_address?: string;
    tx_index?: string;
    type?: string;
    v?: string;
    value?: string;
}
