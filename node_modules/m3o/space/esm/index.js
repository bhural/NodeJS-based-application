import * as m3o from "@m3o/m3o-node";
export class SpaceService {
    constructor(token) {
        this.client = new m3o.Client({ token: token });
    }
    // Create an object. Returns error if object with this name already exists. Max object size of 10MB, see Upload endpoint for larger objects. If you want to update an existing object use the `Update` endpoint
    create(request) {
        return this.client.call("space", "Create", request);
    }
    // Delete an object from space
    delete(request) {
        return this.client.call("space", "Delete", request);
    }
    // Download an object via a presigned url
    download(request) {
        return this.client.call("space", "Download", request);
    }
    // Retrieve meta information about an object
    head(request) {
        return this.client.call("space", "Head", request);
    }
    // List the objects in space
    list(request) {
        return this.client.call("space", "List", request);
    }
    // Read an object in space
    read(request) {
        return this.client.call("space", "Read", request);
    }
    // Update an object. If an object with this name does not exist, creates a new one.
    update(request) {
        return this.client.call("space", "Update", request);
    }
    // Upload a large object (> 10MB). Returns a time limited presigned URL to be used for uploading the object
    upload(request) {
        return this.client.call("space", "Upload", request);
    }
}
