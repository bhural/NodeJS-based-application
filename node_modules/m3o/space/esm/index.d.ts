export declare class SpaceService {
    private client;
    constructor(token: string);
    create(request: CreateRequest): Promise<CreateResponse>;
    delete(request: DeleteRequest): Promise<DeleteResponse>;
    download(request: DownloadRequest): Promise<DownloadResponse>;
    head(request: HeadRequest): Promise<HeadResponse>;
    list(request: ListRequest): Promise<ListResponse>;
    read(request: ReadRequest): Promise<ReadResponse>;
    update(request: UpdateRequest): Promise<UpdateResponse>;
    upload(request: UploadRequest): Promise<UploadResponse>;
}
export interface CreateRequest {
    name?: string;
    object?: string;
    visibility?: string;
}
export interface CreateResponse {
    url?: string;
}
export interface DeleteRequest {
    name?: string;
}
export interface DeleteResponse {
}
export interface DownloadRequest {
    name?: string;
}
export interface DownloadResponse {
    url?: string;
}
export interface HeadObject {
    created?: string;
    modified?: string;
    name?: string;
    url?: string;
    visibility?: string;
}
export interface HeadRequest {
    name?: string;
}
export interface HeadResponse {
    object?: HeadObject;
}
export interface ListObject {
    created?: string;
    modified?: string;
    name?: string;
    url?: string;
    visibility?: string;
}
export interface ListRequest {
    prefix?: string;
}
export interface ListResponse {
    objects?: ListObject[];
}
export interface ReadRequest {
    name?: string;
}
export interface ReadResponse {
    object?: SpaceObject;
}
export interface SpaceObject {
    created?: string;
    data?: string;
    modified?: string;
    name?: string;
    url?: string;
    visibility?: string;
}
export interface UpdateRequest {
    name?: string;
    object?: string;
    visibility?: string;
}
export interface UpdateResponse {
    url?: string;
}
export interface UploadRequest {
    name?: string;
    visibility?: string;
}
export interface UploadResponse {
    url?: string;
}
